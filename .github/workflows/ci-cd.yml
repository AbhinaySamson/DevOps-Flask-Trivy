name: CI/CD - Build, Scan, Push, Deploy

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/devops-flask-trivy

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image (temp tag)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

      - name: Trivy scan image for HIGH and CRITICAL
        uses: aquasecurity/trivy-action@v2
        with:
          image-ref: ${{ env.IMAGE_NAME }}:latest
          format: 'table'
          severity: 'HIGH,CRITICAL'
          exit-code: '1'     # fail the job if vulnerabilities found

  deploy-render:
    runs-on: ubuntu-latest
    needs: build-and-scan
    if: success()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to Render (via API - optional)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          # Trigger a deploy on Render using their REST API
          # This is a simple trigger; you can also link repo directly from Render dashboard for auto build.
          curl -X POST "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d '{"clearCache":true}'
